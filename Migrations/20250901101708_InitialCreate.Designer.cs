// <auto-generated />
using System;
using FraudDetectorWebApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FraudDetectorWebApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250901101708_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FraudDetectorWebApp.Models.ApiConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApiEndpoint")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("BearerToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int>("DelayBetweenRequests")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MaxIterations")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("RequestTemplate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrustSslCertificate")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("ApiConfigurations");
                });

            modelBuilder.Entity("FraudDetectorWebApp.Models.ApiRequestLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApiConfigurationId")
                        .HasColumnType("int");

                    b.Property<int?>("BetaScenarioId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GeneratedScenarioId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuccessful")
                        .HasColumnType("bit");

                    b.Property<int>("IterationNumber")
                        .HasColumnType("int");

                    b.Property<string>("RequestPayload")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RequestTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("ResponseContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ResponseTimeMs")
                        .HasColumnType("bigint");

                    b.Property<int>("StatusCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BetaScenarioId");

                    b.HasIndex("GeneratedScenarioId");

                    b.HasIndex("RequestTimestamp");

                    b.HasIndex("ApiConfigurationId", "IterationNumber");

                    b.ToTable("ApiRequestLogs");
                });

            modelBuilder.Entity("FraudDetectorWebApp.Models.BetaScenario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AMLFlag")
                        .HasColumnType("bit");

                    b.Property<string>("ActivityCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("AmountRiskScore")
                        .HasColumnType("int");

                    b.Property<decimal>("AmountZScore")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("ApiEndpoint")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("BasedOnScenarioId")
                        .HasColumnType("int");

                    b.Property<string>("BusinessType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CNIC")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("CTFFlag")
                        .HasColumnType("bit");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("ComplianceFlag")
                        .HasColumnType("bit");

                    b.Property<int>("ComplianceScore")
                        .HasColumnType("int");

                    b.Property<string>("Conditions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ConfigurationId")
                        .HasColumnType("int");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CustomerSegment")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("FraudScore")
                        .HasColumnType("int");

                    b.Property<string>("FromAccount")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FromName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("GeneratedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("GeneratedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GeneratedStory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenerationEngine")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GenerationPrompt")
                        .HasColumnType("ntext");

                    b.Property<bool>("HighAmountFlag")
                        .HasColumnType("bit");

                    b.Property<string>("IPAddress")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFavorite")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTested")
                        .HasColumnType("bit");

                    b.Property<int?>("LastStatusCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastTestedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("NewActivityCode")
                        .HasColumnType("bit");

                    b.Property<bool>("NewFromAccount")
                        .HasColumnType("bit");

                    b.Property<bool>("NewToAccount")
                        .HasColumnType("bit");

                    b.Property<bool>("NewToCity")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<bool>("OfficeHours")
                        .HasColumnType("bit");

                    b.Property<bool>("OutsideUsualDay")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int?>("ResponseTimeMs")
                        .HasColumnType("int");

                    b.Property<string>("RiskLevel")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ScenarioJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceDataSummary")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("SuspiciousActivityFlag")
                        .HasColumnType("bit");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("TestCount")
                        .HasColumnType("int");

                    b.Property<string>("TestErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TestResponse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("TestSuccessful")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("TestedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ToAccount")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ToBank")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ToName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TransactionComments")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("TransactionDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TransactionStory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("UsedDatabaseData")
                        .HasColumnType("bit");

                    b.Property<string>("UserId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserProfile")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("UserStory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("WatchlistCNIC")
                        .HasColumnType("bit");

                    b.Property<bool>("WatchlistFromAccount")
                        .HasColumnType("bit");

                    b.Property<bool>("WatchlistFromName")
                        .HasColumnType("bit");

                    b.Property<bool>("WatchlistIPAddress")
                        .HasColumnType("bit");

                    b.Property<bool>("WatchlistPhoneNumber")
                        .HasColumnType("bit");

                    b.Property<bool>("WatchlistToAccount")
                        .HasColumnType("bit");

                    b.Property<bool>("WatchlistToBank")
                        .HasColumnType("bit");

                    b.Property<bool>("WatchlistToName")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Amount");

                    b.HasIndex("BasedOnScenarioId");

                    b.HasIndex("Category");

                    b.HasIndex("ComplianceScore");

                    b.HasIndex("ConfigurationId");

                    b.HasIndex("FraudScore");

                    b.HasIndex("GeneratedAt");

                    b.HasIndex("GeneratedBy");

                    b.HasIndex("IsFavorite");

                    b.HasIndex("IsTested");

                    b.HasIndex("Priority");

                    b.HasIndex("RiskLevel");

                    b.HasIndex("Status");

                    b.HasIndex("TestSuccessful");

                    b.HasIndex("Category", "Status");

                    b.HasIndex("ConfigurationId", "GeneratedAt");

                    b.HasIndex("GeneratedBy", "GeneratedAt");

                    b.HasIndex("RiskLevel", "IsTested");

                    b.ToTable("BetaScenarios");
                });

            modelBuilder.Entity("FraudDetectorWebApp.Models.GeneratedScenario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActivityCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("AmountRiskScore")
                        .HasColumnType("int");

                    b.Property<decimal>("AmountZScore")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("ApiEndpoint")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CNIC")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("ConfigurationId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromAccount")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FromName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("GeneratedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("GeneratedPrompt")
                        .HasColumnType("ntext");

                    b.Property<bool>("HasWatchlistMatch")
                        .HasColumnType("bit");

                    b.Property<bool>("HighAmountFlag")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFavorite")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTested")
                        .HasColumnType("bit");

                    b.Property<int?>("LastStatusCode")
                        .HasColumnType("int");

                    b.Property<string>("LastTestConfiguration")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("LastTestedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("NewActivityCode")
                        .HasColumnType("bit");

                    b.Property<bool>("NewFromAccount")
                        .HasColumnType("bit");

                    b.Property<bool>("NewToAccount")
                        .HasColumnType("bit");

                    b.Property<bool>("NewToCity")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<bool>("OutsideUsualDay")
                        .HasColumnType("bit");

                    b.Property<int?>("ResponseTimeMs")
                        .HasColumnType("int");

                    b.Property<string>("RiskLevel")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ScenarioJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("TestCount")
                        .HasColumnType("int");

                    b.Property<string>("TestErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TestResponse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("TestSuccessful")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("TestedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ToAccount")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ToBank")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ToName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TransactionComments")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("TransactionDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserActivity")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("UserId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserProfile")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("WatchlistFromAccount")
                        .HasColumnType("bit");

                    b.Property<bool>("WatchlistFromName")
                        .HasColumnType("bit");

                    b.Property<bool>("WatchlistIPAddress")
                        .HasColumnType("bit");

                    b.Property<bool>("WatchlistToAccount")
                        .HasColumnType("bit");

                    b.Property<bool>("WatchlistToBank")
                        .HasColumnType("bit");

                    b.Property<bool>("WatchlistToName")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Amount");

                    b.HasIndex("AmountRiskScore");

                    b.HasIndex("ConfigurationId");

                    b.HasIndex("GeneratedAt");

                    b.HasIndex("IsFavorite");

                    b.HasIndex("IsTested");

                    b.HasIndex("RiskLevel");

                    b.HasIndex("TestSuccessful");

                    b.HasIndex("AmountRiskScore", "Amount");

                    b.HasIndex("ConfigurationId", "GeneratedAt");

                    b.HasIndex("RiskLevel", "IsTested");

                    b.ToTable("GeneratedScenarios");
                });

            modelBuilder.Entity("FraudDetectorWebApp.Models.SystemConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AllowedValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DefaultValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("IsAdvanced")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("RequiresRestart")
                        .HasColumnType("bit");

                    b.Property<string>("Section")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ValidationRules")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Category");

                    b.HasIndex("IsAdvanced");

                    b.HasIndex("IsReadOnly");

                    b.HasIndex("Key")
                        .IsUnique();

                    b.HasIndex("RequiresRestart");

                    b.HasIndex("Section");

                    b.HasIndex("UpdatedAt");

                    b.HasIndex("Category", "Section");

                    b.HasIndex("IsReadOnly", "RequiresRestart");

                    b.ToTable("SystemConfigurations");
                });

            modelBuilder.Entity("FraudDetectorWebApp.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Company")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("User");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FraudDetectorWebApp.Models.ApiConfiguration", b =>
                {
                    b.HasOne("FraudDetectorWebApp.Models.User", "User")
                        .WithMany("ApiConfigurations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("User");
                });

            modelBuilder.Entity("FraudDetectorWebApp.Models.ApiRequestLog", b =>
                {
                    b.HasOne("FraudDetectorWebApp.Models.ApiConfiguration", "ApiConfiguration")
                        .WithMany("RequestLogs")
                        .HasForeignKey("ApiConfigurationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FraudDetectorWebApp.Models.BetaScenario", "BetaScenario")
                        .WithMany("RequestLogs")
                        .HasForeignKey("BetaScenarioId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("FraudDetectorWebApp.Models.GeneratedScenario", "GeneratedScenario")
                        .WithMany("RequestLogs")
                        .HasForeignKey("GeneratedScenarioId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("ApiConfiguration");

                    b.Navigation("BetaScenario");

                    b.Navigation("GeneratedScenario");
                });

            modelBuilder.Entity("FraudDetectorWebApp.Models.BetaScenario", b =>
                {
                    b.HasOne("FraudDetectorWebApp.Models.BetaScenario", "BaseScenario")
                        .WithMany("DerivedScenarios")
                        .HasForeignKey("BasedOnScenarioId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("FraudDetectorWebApp.Models.ApiConfiguration", "Configuration")
                        .WithMany()
                        .HasForeignKey("ConfigurationId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("BaseScenario");

                    b.Navigation("Configuration");
                });

            modelBuilder.Entity("FraudDetectorWebApp.Models.GeneratedScenario", b =>
                {
                    b.HasOne("FraudDetectorWebApp.Models.ApiConfiguration", "Configuration")
                        .WithMany("GeneratedScenarios")
                        .HasForeignKey("ConfigurationId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Configuration");
                });

            modelBuilder.Entity("FraudDetectorWebApp.Models.ApiConfiguration", b =>
                {
                    b.Navigation("GeneratedScenarios");

                    b.Navigation("RequestLogs");
                });

            modelBuilder.Entity("FraudDetectorWebApp.Models.BetaScenario", b =>
                {
                    b.Navigation("DerivedScenarios");

                    b.Navigation("RequestLogs");
                });

            modelBuilder.Entity("FraudDetectorWebApp.Models.GeneratedScenario", b =>
                {
                    b.Navigation("RequestLogs");
                });

            modelBuilder.Entity("FraudDetectorWebApp.Models.User", b =>
                {
                    b.Navigation("ApiConfigurations");
                });
#pragma warning restore 612, 618
        }
    }
}
